import os, openai
openai.api_type = "azure"
openai.api_base = os.getenv("AZURE_OPENAI_API_BASE")
openai.api_key = os.getenv("AZURE_OPENAI_API_KEY")
openai.api_version = os.getenv("AZURE_OPENAI_API_VERSION", "2023-05-15")


from nemoguardrails import RailsConfig, LLMRails

config = RailsConfig.from_content({
    "models": [
        {
            "type": "main",
            "engine": "azure",
            "model": "<your_deployment_name>"
        }
    ],
    "rails": {
        "output": {
            "flows": ["self check output"]
        },
        "config": {
            "sensitive_data_detection": {
                "output": {
                    "entities": ["EMAIL_ADDRESS", "PHONE_NUMBER"]
                }
            }
        }
    }
})

rails = LLMRails(config)

from functools import wraps

def guarded(func):
    @wraps(func)
    def wrapper(prompt: str, *args, **kwargs):
        raw = func(prompt, *args, **kwargs)
        # Run through Guardrails
        result = rails.generate(messages=[{"role": "user", "content": prompt}],
                                raw_llm_output=raw)
        return result["content"]
    return wrapper
