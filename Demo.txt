from sentence_transformers import SentenceTransformer, util

# Initialize the model
model = SentenceTransformer('all-MiniLM-L6-v2')

# Input sentences
query_sentence = "The cat sat on the mat."  # The sentence to match
existing_sentences = [
    "A cat is sitting on a rug.",
    "The quick brown fox jumps over the lazy dog.",
    "I love programming in Python.",
    "Cats are great companions."
]

# Compute embeddings
query_embedding = model.encode(query_sentence)
existing_embeddings = model.encode(existing_sentences)

# Compute similarities
similarities = util.cos_sim(query_embedding, existing_embeddings)

# Rank and display similarities
results = list(zip(existing_sentences, similarities[0].tolist()))
results = sorted(results, key=lambda x: x[1], reverse=True)  # Sort by similarity score

print(f"Similarity of '{query_sentence}' with existing sentences:")
for sentence, score in results:
    print(f"'{sentence}': {score:.4f}")
