class CitationGenerator:
    """
    Class responsible for generating citations based on similarity results and context filtering.

    This class uses percentile-based thresholds to select the most relevant data and can fetch citations
    for various data types like call reports, company websites, or other client-related sources.

    Attributes:
        lock (asyncio.Lock): A lock to ensure async thread-safe operations when fetching citations.
    """

    def __init__(self):
        """
        Initializes the CitationGenerator with an asyncio lock.

        The lock is used to safely handle concurrent citation fetch operations in an async environment.
        """
        self.lock = asyncio.Lock()

    def fetch_relevant_from_percentile(self, results: List[dict], threshhold_percentile: float = CITATION_THRESHOLD_PERCENTILE) -> List[dict]:
        """
        Filters and returns relevant chunks based on a percentile threshold from similarity results.

        Args:
            results (List[dict]): A list of result dictionaries containing similarity scores and metadata.
            threshhold_percentile (float, optional): The percentile threshold for selecting top results.
                                                     Defaults to CITATION_THRESHOLD_PERCENTILE.

        Returns:
            List[dict]: A list of the most relevant chunks filtered by percentile logic.
        """
        ...

    async def fetch_citations(
        self,
        data_list: List[dict],
        client_name: str,
        citation_dict: dict = {},
        count: dict = {'value': 1},
        call_reports: bool = False,
        company_websites: bool = False
    ) -> List[str]:
        """
        Asynchronously generates citation strings based on provided data and context.

        Args:
            data_list (List[dict]): List of data items (e.g., retrieved chunks) for citation generation.
            client_name (str): Name of the client the citations are associated with.
            citation_dict (dict, optional): A dictionary to store or update citation mappings. Defaults to {}.
            count (dict, optional): A mutable counter dict used to ensure unique citation indexing. Defaults to {'value': 1}.
            call_reports (bool, optional): Flag to indicate if data is from call reports. Defaults to False.
            company_websites (bool, optional): Flag to indicate if data is from company websites. Defaults to False.

        Returns:
            List[str]: A list of formatted citation strings.
        """
        ...
