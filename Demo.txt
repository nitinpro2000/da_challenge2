def chunk_text(text: str, chunk_size: int = 300, chunk_overlap: int = 50) -> list:
    """
    Splits text into overlapping chunks.

    Args:
        text (str): Raw text to split.
        chunk_size (int, optional): Maximum number of words per chunk. Defaults to 300.
        chunk_overlap (int, optional): Number of words to overlap between chunks. Defaults to 50.

    Returns:
        list: List of text chunks.
    """
    logging.info(f"Chunking text with chunk size={chunk_size}, overlap={chunk_overlap}")

    words = text.split()
    chunks = []
    start = 0

    while start < len(words):
        end = start + chunk_size
        chunk = ' '.join(words[start:end])
        chunks.append(chunk)
        start += chunk_size - chunk_overlap  # move start forward with overlap

    logging.info(f"Generated {len(chunks)} chunks")
    return chunks
