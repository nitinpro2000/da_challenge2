import re
from typing import Dict, List, Tuple

def update_citations(
    citation_dict: Dict[str, str],
    text_list: List[str],
    citation_count: int = 11
) -> Tuple[Dict[str, str], List[str]]:
    """
    Updates citation numbers in both the citation_dict and text_list so that
    numbering starts from citation_count.

    Args:
        citation_dict (dict): Keys as strings ("1", "2", ...) and values as URLs.
        text_list (list): List of strings possibly containing citations like [1], [2], etc.
        citation_count (int): Starting number for updated citations. Default is 11.

    Returns:
        tuple: (updated_dict, updated_text_list)
    """

    # Sort existing citations by numeric key
    sorted_items = sorted(citation_dict.items(), key=lambda x: int(x[0]))

    # Create mapping old -> new
    mapping = {old_key: str(citation_count + i) for i, (old_key, _) in enumerate(sorted_items)}

    # Update dict with new keys
    updated_dict = {mapping[old_key]: url for old_key, url in sorted_items}

    # Regex to find [number] citations
    pattern = re.compile(r"\[(\d+)\]")

    def replace_citation(match):
        old_num = match.group(1)
        return f"[{mapping.get(old_num, old_num)}]"

    # Update text list
    updated_text_list = [pattern.sub(replace_citation, text) for text in text_list]

    return updated_dict, updated_text_list


# Example usage
citation_dict = {
    "1": "https://example.com/a",
    "2": "https://example.com/b",
    "3": "https://example.com/c"
}

text_list = [
    "This is a sentence...[1]",
    "Another statement referencing...[2] and also...[3]"
]

new_dict, new_list = update_citations(citation_dict, text_list, citation_count=11)

print("Updated Dict:", new_dict)
print("Updated Text List:", new_list)
