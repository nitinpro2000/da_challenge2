import json

def parse_test_scenarios(file_path):
    with open(file_path, 'r') as file:
        lines = file.readlines()
    
    # Initialize the main dictionary with required keys
    test_cases = {"TC.NO": {}, "Test Description": {}, "Test Steps": {}, "Expected Results": {}}
    case_number = 0  # Initialize test case number
    current_key = None  # Tracks the current section being processed
    
    for line in lines:
        line = line.strip()
        
        # Detect Test Scenario
        if line.startswith("Test Scenario"):
            case_number += 1  # Increment case number
            test_cases["TC.NO"][str(case_number)] = 1.0  # Add TC.NO entry
            # Initialize all fields for this test case as None
            test_cases["Test Description"][str(case_number)] = None
            test_cases["Test Steps"][str(case_number)] = None
            test_cases["Expected Results"][str(case_number)] = None
            current_key = None  # Reset current key for the new test case
        
        # Detect Test Description
        elif line.startswith("Test Description:"):
            current_key = "Test Description"
            test_cases[current_key][str(case_number)] = ""  # Initialize empty
        
        # Detect Test Steps
        elif line.startswith("Steps:"):
            current_key = "Test Steps"
            test_cases[current_key][str(case_number)] = ""  # Initialize empty
        
        # Detect Expected Result
        elif line.startswith("Expected Result:"):
            current_key = "Expected Results"
            test_cases[current_key][str(case_number)] = ""  # Initialize empty
        
        # Populate the current key with the subsequent lines of text
        elif current_key and case_number > 0:
            if test_cases[current_key][str(case_number)] == "":
                test_cases[current_key][str(case_number)] = line
            else:
                test_cases[current_key][str(case_number)] += " " + line

    # Return the formatted test cases
    return test_cases

def save_to_json(data, output_path):
    with open(output_path, 'w') as file:
        json.dump(data, file, indent=4)

# Main program
input_file = 'FAT-480 best steps.txt'  # Replace with your file name
output_file = 'temp.json'

parsed_data = parse_test_scenarios(input_file)
save_to_json(parsed_data, output_file)

print(f"JSON file saved to {output_file}")
