import streamlit as st

# Function to simulate fetching data
def fetch_jira_data(jira_url, selected_projects, selected_stories):
    # Simulate data fetching for simplicity
    sample_data = {
        "PROJ-1": {
            "title": "Sample Story 1",
            "description": "This is a description of story 1.",
            "acceptance_criteria": "Criteria for story 1.",
            "has_attachments": True,
        },
        "PROJ-2": {
            "title": "Sample Story 2",
            "description": "This is a description of story 2.",
            "acceptance_criteria": "Criteria for story 2.",
            "has_attachments": False,
        },
    }
    # Filter based on selected stories
    return {story: sample_data[story] for story in selected_stories if story in sample_data}

# Streamlit app UI
st.title("Jira Story Viewer")

# Text box for Jira URL
jira_url = st.text_input("Enter Jira URL:")

# Multi-select for projects
projects = ["Project A", "Project B", "Project C"]
selected_projects = st.multiselect("Select Projects:", projects)

# Multi-select for user stories (dummy data)
user_stories = ["PROJ-1", "PROJ-2", "PROJ-3"]
selected_stories = st.multiselect("Select User Stories:", user_stories)

# Display story details if a Jira URL and stories are selected
if jira_url and selected_stories:
    st.subheader("Story Details")
    story_data = fetch_jira_data(jira_url, selected_projects, selected_stories)
    for story_id, details in story_data.items():
        st.markdown(f"**Story ID:** {story_id}")
        st.markdown(f"**Title:** {details['title']}")
        st.markdown(f"**Description:** {details['description']}")
        st.markdown(f"**Acceptance Criteria:** {details['acceptance_criteria']}")
        st.markdown(f"**Has Attachments:** {details['has_attachments']}")
        st.markdown("---")
